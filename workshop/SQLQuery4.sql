-- Customerwise Quarterly Order amount (Total order amt)

SELECT O.CustomerID,C.CompanyName,SUM(OD.Quantity * OD.UnitPrice) AS [Total Order Amount] , DATEPART(QQ,O.OrderDate) as [Quarter], YEAR(O.OrderDate) AS [Year]
FROM Orders AS O
JOIN Customers AS C ON O.CustomerID = C.CustomerID
JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID
GROUP BY O.CustomerID, DATEPART(QQ,O.OrderDate),C.CompanyName,YEAR(O.OrderDate)
ORDER BY O.CustomerID,[Year],[Quarter]



-- we need 5 col as CustomerID,Customer name(here customer is company as it is shipping data), quarter no., year, Total order amt
-- don't directly jump to sql query. do the required work as what colum,ns you need, understand the problem statement
-- as customers are company so we grouped it by CustomerID along with Company name



-- Employee wise, Shipper wise Total Order Amount and Total Frieght for year 1996

--Frieght(Shipping Charge)

-- We need EmployeeID,eMPLOYEE nAME,Shipper ID,SHIP cOMPNY, Sum(Frieght), OD and Orderdate

SELECT  O.EmployeeID,E.FirstName + ' ' + E.LastName AS [Employee Name], O.ShipVia,S.CompanyName,SUM(OD.Quantity * OD.UnitPrice) AS [TOTAL AMOUNT], SUM(O.Freight) AS Freight
FROM Orders AS O
JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID
JOIN Shippers AS S ON O.ShipVia = S.ShipperID
JOIN Employees AS E ON O.EmployeeID = E.EmployeeID
WHERE YEAR(O.OrderDate) = 1996
GROUP BY O.EmployeeID,E.FirstName + ' ' + E.LastName, O.ShipVia, S.CompanyName




SELECT  O.EmployeeID,E.FirstName + ' ' + E.LastName AS [Employee Name],SUM(OD.Quantity * OD.UnitPrice) AS [TOTAL AMOUNT], SUM(O.Freight) AS Freight, SUM(OD.Quantity * OD.UnitPrice) / SUM(O.Freight) AS ratio
FROM Orders AS O
JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID
JOIN Shippers AS S ON O.ShipVia = S.ShipperID
JOIN Employees AS E ON O.EmployeeID = E.EmployeeID
WHERE YEAR(O.OrderDate) = 1996
GROUP BY O.EmployeeID,E.FirstName + ' ' + E.LastName
ORDER BY ratio DESC



SELECT  O.EmployeeID,E.FirstName + ' ' + E.LastName AS [Employee Name],SUM(OD.Quantity * OD.UnitPrice) AS [TOTAL AMOUNT], SUM(O.Freight) AS Freight
FROM Orders AS O
JOIN [Order Details] AS OD ON O.OrderID = OD.OrderID
JOIN Shippers AS S ON O.ShipVia = S.ShipperID
JOIN Employees AS E ON O.EmployeeID = E.EmployeeID
WHERE YEAR(O.OrderDate) = 1996
GROUP BY O.EmployeeID,E.FirstName + ' ' + E.LastName
ORDER BY Freight DESC

--List of Customers as CustomerID,Name, Total Order Count, Total Order value for Year 1998 for CUstomers who granted Order amount higher than 75,000


--Customers, OD, Order

SELECT O.CustomerID, C.CompanyName, COUNT(DISTINCT OD.OrderID) [Total Order Count], sum(OD.Quantity * OD.UnitPrice) AS [Order Amount]
FROM [Order Details] AS OD
JOIN Orders AS O ON OD.OrderID = O.OrderID
JOIN Customers AS C ON O.CustomerID = C.CustomerID
WHERE YEAR(O.OrderDate) = 1998 
GROUP BY O.CustomerID, C.CompanyName
ORDER BY [Order Amount] DESC


SELECT O.CustomerID, C.CompanyName, COUNT(DISTINCT OD.OrderID) [Total Order Count], SUM(OD.Quantity * OD.UnitPrice) AS [Order Amount]
FROM [Order Details] AS OD
JOIN Orders AS O ON OD.OrderID = O.OrderID
JOIN Customers AS C ON O.CustomerID = C.CustomerID
WHERE YEAR(O.OrderDate) = 1998 
GROUP BY O.CustomerID, C.CompanyName
HAVING  SUM(OD.Quantity * OD.UnitPrice)  > 25000
ORDER BY [Order Amount] DESC


-- THERE are duplicates of OrderID so we placed Distinct in OrderID count
-- 25000 CONDITION IS applying on aggregate function, so it can't be placed on where clause. So we use Having clause
--Understand Execution of query

--List od Orders by customer BERGS in 1998

SELECT OD.OrderID, O.CustomerID,P.ProductName
FROM [Order Details] AS OD
JOIN Orders AS O ON OD.OrderID = O.OrderID
JOIN Customers AS C ON O.CustomerID = C.CustomerID
JOIN Products AS P ON OD.ProductID = P.ProductID
WHERE O.CustomerID = 'BERGS' AND YEAR(O.OrderDate) = 1998

--THIS AS BUSNESS PROBLEM SOLVING AND TRY TO FIND MAXIMUM OPTIMIZATION

-- Category-wise List of Products which where ordered moe than 3 times

--category,products,order DETAILS

SELECT C.CategoryName, P.CategoryID, OD.ProductID, P.ProductName,COUNT(DISTINCT OD.OrderID) AS [Order Count]
FROM [Order Details] AS OD
JOIN Products AS P ON OD.ProductID = P.ProductID
JOIN Categories AS C ON P.CategoryID = C.CategoryID
GROUP BY C.CategoryName,P.CategoryID,OD.ProductID, P.ProductName
HAVING COUNT(DISTINCT OD.OrderID) > 3

-- Provide Avg. Order amount

SELECT AVG(OD.UnitPrice * OD.Quantity) [aVG oRDER aMOUNT ]
FROM [Order Details] AS OD



SELECT SUM(OD.UnitPrice * OD.Quantity)/COUNT(DISTINCT OD.OrderID) [aVG oRDER aMOUNT/oRDER ]
FROM [Order Details] AS OD

SELECT  OD.OrderID,OD.ProductID,OD.UnitPrice
FROM [Order Details] AS OD




















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































